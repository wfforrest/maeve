% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{maeve_options}
\alias{maeve_options}
\title{Set or get options for maeve}
\usage{
maeve_options(...)
}
\arguments{
\item{...}{Option names to retrieve option values or \code{[key]=[value]} pairs to set options.}
}
\value{
a function as from settings::options_manager()
}
\description{
Set or get options for maeve
}
\section{Supported options}{

The following options are supported
\itemize{
 \item{\code{group_name}}              {(\code{character};              'group_name') The column name for the group name factor}
 \item{\code{subject_ID}}              {(\code{character};                'animalID') The column name for the subject name factor.}
 \item{\code{trace_ID}}                {(\code{character};                'animalID') The column name for the trace identifier name factor for maeve::grid_by_trace().}
 \item{\code{x_name}}                  {(\code{character};            'DAY_OF_STUDY') The column name for the x-axis / time field }
 \item{\code{endpoint_name}}           {(\code{character};            'TUMOR_VOLUME') The column name for the y-axis / response field }
 \item{\code{EOS_CR_minval}}           {(\code{numeric};                           0) numeric threshold to count an end-of-study complete response if a subject_ID has its last endpoint_name value at or below this value. }
 \item{\code{PR_threshold}}            {(\code{numeric};                         0.5) numeric threshold to count a partial response if a subject_ID has any observations at or below this fraction of its baseline endpoint_name value and is NOT an end-of-study complete response (EOS_CR). }
 \item{\code{full_study_data_frame}}   {(\code{data.frame};                     NULL) data.frame with untruncated study data.  Typically returned from (model_study(...))[['data']][['clean_DF_full_study']] }
 \item{\code{modeling_data_frame}}     {(\code{data.frame};                     NULL) data.frame with internal names used for predictions.  Typically returned from (model_study(...))[['data']][['clean_DF_restricted']] }
 \item{\code{autoset_full_study_data}} {(\code{logical};                        TRUE) Whether to automatically assign (model_study(...))[['data']][['clean_DF_full_study']] to maeve_options('full_study_data_frame' = full_study_data_frame) }
 \item{\code{autoset_modeling_data}}   {(\code{logical};                        TRUE) Whether to automatically assign (model_study(...))[['data']][['clean_DF_restricted']] to maeve_options('modeling_data_frame' = modeling_data_frame) }
 \item{\code{truncate_fit}}            {(\code{logical};                       FALSE) Whether to truncate predicted values to the range of observed responses within maeve:predict_study()? }
 \item{\code{truncation_return_type}}  {(\code{character};              'data.frame') What data type to return from "truncate_study()"? }
 \item{\code{truncated_group_levels}}  {(\code{character};              character(0)) Which group levels are entirely lost when "truncate_study()" is run within model_study()? }
 \item{\code{min_n_in_group}}          {(\code{numeric};                         0) all times in a group are truncated when less than this number   of subjects are left in the group. }
 \item{\code{min_frac_in_group}}       {(\code{numeric};                         0) all times in a group are truncated when less than this fraction of subjects are left in the group. }
 \item{\code{min_frac_in_study}}       {(\code{numeric};                         0) all times in a study are truncated when less than this fraction of subjects are left in the entire study. }
 \item{\code{overall_x_min}}           {(\code{numeric};                      -Inf) data with x-axis values below this number are truncated. }
 \item{\code{overall_x_max}}           {(\code{numeric};                       Inf) data with x-axis values above this number are truncated. }
 \item{\code{abbreviate_n}}            {(\code{numeric};                         1e6) The maximum number of characters in a group name }
 \item{\code{reference_Dunnett}}       {(\code{character};                      NULL) Character string with the group factor level to use as Dunnett reference.  If NULL, the first level should be used.}
 \item{\code{add_to_endpoint}}         {(\code{numeric};                           1) The offset value added to the endpoint before transformation }
 \item{\code{restrict_x}}              {(\code{logical};                       FALSE) Restrict to the x-values found in the specified reference group }
 \item{\code{number_basis_vecs}}       {(\code{numeric};                          -1) Default number of basis_vecs to try in fitting a spline. }
 \item{\code{min_basis_vecs}}          {(\code{numeric};                           3) Minimum number of basis_vecs to try in fitting a spline. }
 \item{\code{max_basis_vecs}}          {(\code{numeric};                          15) Maximum number of basis_vecs to try in fitting a spline. } 
 \item{\code{trans_func_char}}         {(\code{character};                     'log') Function for transformation of (endpoint_name + add_to_endpoint) }
 \item{\code{inv_func_char}}           {(\code{character};                     'exp') Inverse function for transformation of (endpoint_name + add_to_endpoint) }
 \item{\code{test_func_x}}             {(\code{numeric};                       1:10 ) Values with which to test that trans_func and inv_func are inverse functions. }
 \item{\code{weight_lmer_option}}      {(\code{character};                'uniform' ) Select how x-values should be weighted in lme4 linear mixed model regression. }
 \item{\code{metric}}                  {(\code{character}; c('linear','ITGR','AUC') ) Summarization method(s) for longitudinal response function. }
 \item{\code{metrics_supported}}       {(\code{character}; c('linear','ITGR','AUC', 'ITGR_pwl', 'AUC_pwl', 'ITGR_poly', 'AUC_poly') ) Supported summarization methods for longitudinal response function. }
 \item{\code{N_integration_grid}}      {(\code{numeric};                          25) Number of equally-spaced points to use in the Simpson Rule numerical integration.}
 \item{\code{contrast}}                {(\code{character};                'Identity') Contrast for group summary comparisons. }
 \item{\code{xrange_norm_method}}      {(\code{character};        'slope_equivalent') Method for normalization of spline summary statistics. }
 \item{\code{progress}}                {(\code{logical};                       FALSE) Print out various progress messages from the functions. }
 \item{\code{number_break_points}}     {(\code{numeric};                           3) Number of break points (including 2 end points) in piecewise linear regression when metric = 'AUC_pwl'. Typically used for 3 time points.}
 \item{\code{break_points}}            {(\code{numeric};                        NULL) Break points (including 2 end points) in piecewise linear regression when metric = 'AUC_pwl'. Typically used for 3 time points.}
 \item{\code{poly_degree}}             {(\code{numeric};                           2) Degree of simply polynomial (NOT the spline) fit, when metric = 'AUC_poly'. Typically used for 3 time points.}
 \item{\code{poly_object}}             {(\code{poly,matrix};                    NULL) Object returned from stats::poly() call in maeve:::make_basissis_matrix() when metric = 'AUC_poly'. Typically used for 3 time points.}
 \item{\code{mismatch_action}}         {(\code{character};                    'stop') Action when a function is passed arguments that do not match either the function or an element of maeve_options(). }
 \item{\code{x_pred_type}}             {(\code{character};                'observed') One of c( 'observed', 'grid', 'union_observed_and_grid', 'custom' ) determining options for what the x-axis values for predictions should be.  If "custom", then the vector 'x_pred_vec' will be used.  Otherwise, 'x_pred_vec' is ignored. }
 \item{\code{x_pred_vec}}              {(\code{numeric};                        NULL) numeric vector of values to use for x-axis prediction points when x_pred_type = 'custom'. }
 \item{\code{x_pred_spacing}}          {(\code{numeric};                           1) distance between x-values in a prediction grid. }
 \item{\code{x_pred_interior_grid}}    {(\code{logical};                        TRUE) whether to truncate the grid endpoints to be the most widely spaced integers within the range. }
 \item{\code{include_newdata_ID}}      {(\code{logical};                        TRUE) whether to include subject_ID values in the data.frame. }
 \item{\code{title_label    }}         {(\code{character};                        '') ggplot2::labs( title = title_label ) }
 \item{\code{y_label}}                 {(\code{character}; 'log( tumor volume + 1 )') ggplot2::labs(     y =     y_label ) }
 \item{\code{x_label}}                 {(\code{character};                    'day' ) ggplot2::labs(     x =     x_label ) }
 \item{\code{legend_position_char}}    {(\code{character};                    'none') ggplot2::theme( legend.position = legend_position_char ) }
 \item{\code{axis_text_x_angle}}       {(\code{numeric};                           0) ggplot2::theme( axis.text.x = element_text( angle = axis_text_x_angle ) ) }
 \item{\code{axis_text_x_size}}        {(\code{numeric};                           9) ggplot2::theme( axis.text.x = element_text( size = axis_text_x_size ) ) }
 \item{\code{axis_text_x_hjust}}       {(\code{numeric};                         0.5) ggplot2::theme( axis.text.x = element_text( hjust = axis_text_x_hjust ) ) }
 \item{\code{axis_text_x_vjust}}       {(\code{numeric};                         0.5) ggplot2::theme( axis.text.x = element_text( vjust = axis_text_x_vjust ) ) }
 \item{\code{axis_text_y_size}}        {(\code{numeric};                           9) ggplot2::theme( axis.text.y = element_text( size = axis_text_y_size ) ) }
 \item{\code{legend_text_size}}        {(\code{numeric};                           9) ggplot2::theme( legend.text = element_text( size = legend_text_size ) ) }
 \item{\code{strip_text_size}}         {(\code{numeric};                           9) ggplot2::theme(  strip.text = element_text( size = strip_text_size ) ) }
 \item{\code{linear_predictor}}        {(\code{character};                'pred_lin') column name of linear predictor in data.frame of predicted output. }
 \item{\code{linear_color}}            {(\code{character};                     'red') color of linear predictor. }
 \item{\code{linear_lwd}}              {(\code{numeric};                        1.50) line width parameter for linear predictor, passed to geom_line(...) }
 \item{\code{spline_predictor}}        {(\code{character};                'pred_gam') column name of spline predictor in data.frame of predicted output. }
 \item{\code{spline_color}}            {(\code{character};                   'black') color of spline predictor. }
 \item{\code{spline_lwd}}              {(\code{numeric};                        1.25) line width parameter for spline predictor, passed to geom_line(...) }
 \item{\code{piecewise_predictor}}     {(\code{character};                'pred_pwl') column name of piecewise linear predictor in data.frame of predicted output. }
 \item{\code{piecewise_color}}         {(\code{character};                    'blue') color of piecewise linear predictor. }
 \item{\code{piecewise_lwd}}           {(\code{numeric};                        1.75) line width parameter for piecewise linear predictor, passed to geom_line(...) }
 \item{\code{poly_predictor}}          {(\code{character};               'pred_poly') column name of polynomial predictor in data.frame of predicted output. }
 \item{\code{poly_color}}              {(\code{character};                   'green') color of polynomial predictor. }
 \item{\code{poly_lwd}}                {(\code{numeric};                        2.00) line width parameter for polynomial predictor, passed to geom_line(...) }
 \item{\code{geom_na_rm}}              {(\code{logical};                       TRUE ) silently remove NA values in the geom_point() & geom_line() calls? }
 \item{\code{geom_point_size}}         {(\code{numeric};                          2 ) ggplot2::geom_point( size = geom_point_size ) }
 \item{\code{nrow_value}}              {(\code{numeric};                       NULL ) passed to ggplot2::facet_wrap(...) }
 \item{\code{ncol_value}}              {(\code{numeric};                       NULL ) passed to ggplot2::facet_wrap(...) }
}
}

\examples{
 cat('maeve::maeve_options() allows reset of parameters called in functions within maeve.')
 \dontrun{ maeve_options( 'spline_color' );
           maeve_options( 'spline_color' = 'orange');
           maeve_options( 'spline_color' );
           maeve_reset()
           maeve_options( 'spline_color' );
          }


}
\author{
Bill Forrest \email{forrest@gene.com}
}
\keyword{function}
